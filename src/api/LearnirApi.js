/**
 * Learnir Javascript
 * Welcome to the Learnir Javascript sdk, get your content right in the browser anywhere and everywhere.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Box from '../model/Box';
import Consumer from '../model/Consumer';

/**
* Learnir service.
* @module api/LearnirApi
* @version 1.0.0
*/
export default class LearnirApi {

    /**
    * Constructs a new LearnirApi. 
    * @alias module:api/LearnirApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the consumer operation.
     * @callback module:api/LearnirApi~consumerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Consumer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a New Consumer on Learnir
     * This creates a consumer using the details you provide and in future helps us identify when someone particular is making use of your content boxes
     * @param {String} id The unique id of the user in your own database used for interactions all around your environment.
     * @param {String} name The name of the consumer for value added features(console & experiences)
     * @param {String} email The email of the consumer for value added  features(console & experiences)
     * @param {module:api/LearnirApi~consumerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Consumer}
     */
    consumer(id, name, email, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling consumer");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling consumer");
      }
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling consumer");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'name': name,
        'email': email
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Consumer;
      return this.apiClient.callApi(
        '/intergration/sdk/consumer', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the content operation.
     * @callback module:api/LearnirApi~contentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Box>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get your Port content
     * Gets an Array of your content boxes(objects) in a formatted manner
     * @param {Object} opts Optional parameters
     * @param {String} opts.consumer The id of the created consumer
     * @param {module:api/LearnirApi~contentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Box>}
     */
    content(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'consumer': opts['consumer']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Box];
      return this.apiClient.callApi(
        '/intergration/sdk/content', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
